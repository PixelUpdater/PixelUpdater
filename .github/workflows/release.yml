---
on:
  push:
    # Uncomment to test against a branch
    #branches:
    #  - ci
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Create Github release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get version from tag
        id: get_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
              version=${GITHUB_REF#refs/tags/v}
          else
              version=0.0.0.${GITHUB_REF#refs/heads/}
          fi
          echo "version=${version}" >> "${GITHUB_OUTPUT}"

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: true

      # https://github.com/actions/checkout/issues/290
      - name: Preserve tag annotations
        run: git fetch -f origin ${{ github.ref }}:${{ github.ref }}

      - name: Validate gradle wrapper checksum
        uses: gradle/wrapper-validation-action@v1

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '20'
          cache: 'gradle'

      - name: Decode Keystore
        run: |
          echo -n "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Create SSH KEY
        run: |
          echo "${{ secrets.SIGNING_KEY }}" > pixelupdater.key
          chmod 600 pixelupdater.key

      # - name: Debug Keystore and ssh key
      #   run: |
      #     sha256sum keystore.jks > keystore_sha256.txt
      #     sha256sum pixelupdater.key > ssh_key_sha256.txt
      #     ls -l
      #     echo "Checking keystore file path:"
      #     echo [$PWD]
      #     echo "keystore hash"
      #     cat keystore_sha256.txt
      #     echo "ssh_key hash"
      #     cat ssh_key_sha256.txt

      - name: Build Release apk
        env:
          RELEASE_KEYSTORE: ${{ github.workspace }}/keystore.jks
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSPHRASE: ${{ secrets.RELEASE_KEY_PASSPHRASE }}
          RELEASE_KEYSTORE_PASSPHRASE: ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}
          SIGNING_KEY: ${{ github.workspace }}/pixelupdater.key
          SIGNING_KEY_PASSPHRASE: ${{ secrets.SIGNING_KEY_PASSPHRASE }}
        run: |
          ./gradlew zipRelease
          ./gradlew signReleaseZip
          ./gradlew updateJsonRelease

      - name: Debug list artifacts
        run: |
          ls -lR app/build/distributions/release

      - name: Rename files
        run: |
          # Rename the existing files
          mv app/build/distributions/release/PixelUpdater-***.zip app/build/distributions/release/PixelUpdater_${{ steps.get_version.outputs.version }}.zip
          mv app/build/distributions/release/PixelUpdater-***.zip.sig app/build/distributions/release/PixelUpdater_${{ steps.get_version.outputs.version }}.zip.sig
        working-directory: ${{ github.workspace }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "PixelUpdater_${{ steps.get_version.outputs.version }}"
          path: app/build/distributions/release/*

      - name: Upload release-info
        uses: actions/upload-artifact@v3
        id: upload_release_info
        with:
          name: release update json
          path: app/module/updates/release/info.json

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Version ${{ steps.get_version.outputs.version }}
          # body_path: RELEASE.md
          draft: true
          prerelease: false
          files: |
            app/build/distributions/release/PixelUpdater_${{ steps.get_version.outputs.version }}.zip
            app/build/distributions/release/PixelUpdater_${{ steps.get_version.outputs.version }}.zip.sig

  update-links:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: update-links

      # Download the info.json
      - name: Download info.json
        uses: actions/download-artifact@v3
        with:
          name: release update json
          path: temp
        continue-on-error: true

      # Update the release.json file, commit and push
      - name: Update release.json
        run: |
          ls -al .
          ls -al temp
          cat temp/info.json > release.json
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add release.json
          git commit -m "Update release.json ${{ github.ref }}"
          git push origin update-links

